Version 2.00, 2013-03-27
========================

Important
---------

TrackRecord now requires Rails 3.2. It does not run on Rails 2. As a result,
the Ruby version requirements are increased too; you need version 1.9.3 at
patch 392 or later. The upgrade instructions below assume that this is
already available.

On the client side, TrackRecord's views now assume a competent HTML 5, CSS 2
capable browser is used. It looks best on modern CSS 3 aware browsers such as
recent Safari, Chrome, Opera and Firefox builds. JavaScript is very strongly
recommended but not required, so if you have it turned off in your browser
for any reason or your browser doesn't support it, TrackRecord can still be
used. Internet Explorer is untested and not officially supported at any
version, though it may work in practice.


Upgrading
---------

To upgrade, first do a full database backup in case anything goes wrong!
Next, unpack TrackRecord somewhere new - don't copy it on top of an existing
installation. Make any configuration changes you made to your old copy:

- You can safely just copy over the old 'config/database.yml'
- ...and 'config/initializers/email_config.rb'
- ...and 'config/initializers/general_config.rb' files

- Possibly port over your e-mail sending configuration for ActionMailer
  in 'config/environments/production.rb' or '...development.rb' - see:
  http://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration

You must also set a secret key in 'config/initializers/secret_token.rb';
this is the equivalent of the key that in previous versions lived inside
'config/environment.rb'. Comments in the file give detailed instructions.

The gem dependencies for TrackRecord are all listed in 'Gemfile'. To get
these installed, from inside the 'trackrecord' directory (the same directory
as this change log file and 'Gemfile'), run:

  bundle install

...to make sure all the relevant gems required by the updated TrackRecord
are present. Now make sure your web server is offline and bring your database
up to date (changing 'production' to 'development' if being rightly cautious
and testing on a development copy first):

  rake db:migrate RAILS_ENV=production

Then you should be able to start your web server again. There may be some
server changes needed for Rails 3; consult your web server documentation if
necessary. I recommend using Phusion Passenger, if possible, to serve Rails
application such as TrackRecord.

If you have trouble running 'bundle' or the migration, in the first
instance check Google for the error message you see - upgrading Rails and
using bundles is very rarely a pain-free process and the issues will usually
be to do with your computing environment rather than TrackRecord's own code.


Changes from version 1.54 (see the v1.x branch for more v1.x changes)
-------------------------

- New major version number reflects bump to Rails 3.2 / Ruby 1.9.
  + Functionality is an evolution and refinement over TrackRecord v1.x,
    rather than a major overhaul.

- Improved navigation flow throughout.
  + More consistent and logical navigation options in some places.
  + Updated visual theme makes things easier to read.

- Reports can be saved for recollection and modification later.
  + Can be kept private or shared to other TrackRecord users.
  + Sharing URLs are very simple, since they just refer to a saved.
    database object rather than recording all report parameters.
  + Old-style long report URLs from TrackRecord v1.5 are supported and
    create a temporary user report.
  + Quick report generation buttons available when managing or viewing
    customers, projects, tasks and users.

- All list search forms extended to at long last support date ranges.

- Improved labels for customers, projects and tasks everywhere - link back
  to the original item, with tooltips giving code and description details.

- The beginnings of proper internationalisation are in place, though a lot
  of messages are not yet run through the language files.

- The 'gruff' gem is commented out inside 'Gemfile' to prevent annoying
  dependencies. The graph controller mechanism is still present but will
  not work unless you uncomment the gruff line in 'Gemfile' and re-run
  "bundle install". It isn't used by default anywhere in TrackRecord.

- Bugs related to tasks with no project or projects with on customer fixed.

- Old-style report URLs are now reliable, rather than leading to 404 errors
  on older TrackRecord versions if active tasks had become inactive or vice
  versa. Now the active-vs-inactive lists are reassessed at generation time
  (and the signed in user's task permissions taken into account as usual).
