    <h1><%= apphelp_heading() %></h1>

<%
   # Render as follows:
   #
   #   render(
   #     :partial => 'edit',
   #     :locals  => { action => :create | :update },
   #   )
   #
   # ...and set @item to a category to edit, @js to true/false for a JS
   # or non-JS version of the page. The ":action" local is used for the
   # internationalised text in the 'submit' action button.
   #

   all_task_count      = @current_user.all_permitted_tasks.count
   active_task_count   = @current_user.active_permitted_tasks.count
   inactive_task_count = all_task_count - active_task_count

   if ( all_task_count.zero? )
     if ( @current_user.restricted? ) -%>
    <p>
      Currently, you are not permitted to view any tasks so you
      cannot generate a meaningful report. Please contact the
      system administrator for assistance.
    </p>
<%   else -%>
    <p>
      There are no tasks defined so no reports can be generated.
    </p>
<%   end  -%>
<% else -%>
  <%= form_for( [ @saved_report.user, @saved_report ] ) do | f | -%><%= f.error_messages %>
    <table class="editing_table">
      <tr class="editing_row">
        <th colspan="3">
          <%= f.label :title %>:
        </th>
        <td>&nbsp;&nbsp;</td>
        <th>
          &nbsp;
        </th>
      </tr>

      <tr class="editing_row">
        <td colspan="3">
          <%= f.text_field :title, :size => 60, :maxlength => SavedReport::TITLE_LIMIT %>
          <%= help_link( :report_title ) %>
        </td>
        <td>&nbsp;&nbsp;</td>
        <td>
          <%= f.check_box( :shared ) %><%= f.label( :shared ) %>
          <%= help_link( :report_share ) %>

          <script type="text/javascript">
            //<![CDATA[
              Event.observe
              (
                window,
                'load',
                function()
                {
                  var inputFieldAutoValue;

                  var inputField = $( 'saved_report_title'  );
                  var checkBox   = $( 'saved_report_shared' );

                  checkBox.observe
                  (
                    'click',
                    function()
                    {
                      var inputFieldCurrentValue = inputField.getValue();

                      if ( checkBox.getValue() )
                      {
                        /* Check box set. If the input field is empty, set it
                         * to the automatically determined value, which will
                         * need to be fetched from the server the first time.
                         */

                        if ( inputFieldCurrentValue == '' )
                        {
                          if ( inputFieldAutoValue )
                          {
                            inputField.setValue( inputFieldAutoValue );
                          }
                          else
                          {
                            inputField.disable();
                            inputField.setValue( "â€¦" );

                            new Ajax.Request
                            (
                              '<%= j( saved_report_auto_title_path() ) =%>',
                              {
                                method:    'get',
                                onSuccess: function( response )
                                {
                                  inputFieldAutoValue = response.responseText;
                                  inputField.enable();
                                  inputField.setValue( inputFieldAutoValue );
                                }
                              }
                            );
                          }
                        }
                      }
                      else if ( inputFieldCurrentValue == inputFieldAutoValue )
                      {
                        /* Check box unset. If the input field value seems to
                         * have been set automatically, clear the value.
                         */

                        inputField.setValue( '' );
                      }
                    }
                  );
                }
              );
            //]]>
          </script>
        </td>
      </tr>

      <tr><td colspan="5">&nbsp;</td></tr>

      <tr class="editing_row">
        <th>Start date (UTC, inclusive):</th>
        <td>&nbsp;&nbsp;</td>
        <th>End date (UTC, inclusive):</th>
        <td>&nbsp;&nbsp;</td>
        <th>Column duration:</th>
      </tr>

      <tr class="editing_row">
        <td>Select by start of month:</td>
        <td>&nbsp;&nbsp;</td>
        <td>Select by end of month:</td>
        <td>&nbsp;&nbsp;</td>
        <td>&nbsp;&nbsp;</td>
      </tr>
      <tr class="editing_row">
        <td>
<%= reporthelp_month_selection( f, :range_month_start ) %>
        </td>
        <td>&nbsp;&nbsp;</td>
        <td>
<%= reporthelp_month_selection( f, :range_month_end ) %>
        </td>
        <td>&nbsp;&nbsp;</td>
        <td>
<%= reporthelp_frequency_selection( f ) %>
        </td>
      </tr>

      <tr class="editing_row">
        <td><strong>OR</strong> select by start of week:</td>
        <td>&nbsp;&nbsp;</td>
        <td><strong>OR</strong> select by end of week:</td>
        <td rowspan="5">&nbsp;&nbsp;</td>
        <td rowspan="5">
          <small>
            Reports are presented in columns adding up to the requested date
            range. Dates chosen in the middle of a column (e.g. mid-week
            for a weekly report) are <em><strong>not rounded</strong></em>
            &ndash; the exact requested range is obeyed.
          </small>
        </td>
      </tr>
      <tr class="editing_row">
        <td>
<%= reporthelp_week_selection( f, :range_week_start ) %>
        </td>
        <td>&nbsp;&nbsp;</td>
        <td>
<%= reporthelp_week_selection( f, :range_week_end ) %>
        </td>
      </tr>

      <tr class="editing_row">
        <td><strong>OR</strong> choose an exact date:</td>
        <td>&nbsp;&nbsp;</td>
        <td><strong>OR</strong> choose an exact date:</td>
      </tr>
      <tr class="editing_row">
        <td nowrap="nowrap"><%= reporthelp_start_time( f ) %></td>
        <td>&nbsp;&nbsp;</td>
        <td nowrap="nowrap"><%= reporthelp_end_time( f ) %></td>
      </tr>
      <tr class="editing_row">
        <td colspan="3">
          <small>
            You can type in dates by hand too. Selecting no date gives "from
            earliest work packet" or "to latest work packet" for the tasks
            chosen below.
          </small>
        </td>
      </tr>

      <tr><td colspan="5">&nbsp;</td></tr>

      <tr class="editing_row">
        <th colspan="3">
<% unless ( active_task_count.zero? ) -%>
          Report data for following <em>active</em> tasks:
<% end -%>
        </th>
        <td>&nbsp;&nbsp;</td>
        <th>Only calculate for these users:</th>
      </tr>

      <tr class="editing_row">
        <td colspan="3">
<% unless ( active_task_count.zero? ) -%>
<%=
  taskhelp_degrading_selector(
    :report_generator,
    {
      :form        => f,
      :report      => @saved_report,
      :line_prefix => '            '
    }
  )
%>
<% end -%>
        </td>
        <td rowspan="4">&nbsp;&nbsp;</td>
        <td rowspan="4">
<%=    reporthelp_user_selection( f, @user_array ) %>
          <br /><br />
          <small>
            Select specific users to produce a report
            calculated only for those users. Select no
            users for full task analysis.
          </small>
        </td>
      </tr>

      <tr class="editing_row">
        <th colspan="3">
<% unless ( inactive_task_count.zero? ) -%>
          Report data for following <em>inactive</em> tasks:
<% end -%>
        </th>
      </tr>

      <tr class="editing_row">
        <td colspan="3">
<% unless ( inactive_task_count.zero? ) -%>
<%=
  taskhelp_degrading_selector(
    :report_generator,
    {
      :form        => f,
      :report      => @saved_report,
      :inactive    => true,
      :line_prefix => '            '
    }
  )
%>
<% end -%>
        </td>
       </tr>

      <tr class="editing_row">
        <td colspan="3">
          <small>
<% if ( inactive_task_count.zero? ) -%>
            Select nothing in the list above to automatically include
            <em>all active</em> tasks.
<% elsif ( active_task_count.zero? ) -%>
            You must select at least one task to generate a report.
<% else -%>
            Select nothing in the two lists above to automatically include
            <em>all active</em> tasks.
<% end -%>
          </small>
        </td>
      </tr>

      <tr><td colspan="5">&nbsp;</td></tr>

      <tr class="editing_row">
        <th>From the above tasks, show:</th>
        <td>&nbsp;&nbsp;</td>
        <th>Calculation options:</th>
        <td>&nbsp;&nbsp;</td>
        <th>Sorting and grouping:</td>
      </tr>

      <tr class="editing_row">
        <td>
          <%= f.radio_button( 'task_filter', 'all'          ) %><%= f.label( 'task_filter_all',          'All selected tasks'          ) %><br />
          <%= f.radio_button( 'task_filter', 'billable'     ) %><%= f.label( 'task_filter_billable',     'Only the billable tasks'     ) %><br />
          <%= f.radio_button( 'task_filter', 'non_billable' ) %><%= f.label( 'task_filter_non_billable', 'Only the non-billable tasks' ) %>
        </td>
        <td>&nbsp;&nbsp;</td>
        <td>
          <%= f.check_box( :include_totals        ) %><%= f.label( 'include_totals',        'Show total hours'         ) %><br />
          <%= f.check_box( :include_committed     ) %><%= f.label( 'include_committed',     'Show committed hours'     ) %><br />
          <%= f.check_box( :include_not_committed ) %><%= f.label( 'include_not_committed', 'Show not committed hours' ) %><br />
          <%= f.check_box( :exclude_zero_rows     ) %><%= f.label( 'exclude_zero_rows',     'Hide zero total rows'     ) %><br />
          <%= f.check_box( :exclude_zero_cols     ) %><%= f.label( 'exclude_zero_cols',     'Hide zero total columns'  ) %><br />
        </td>
        <td>&nbsp;&nbsp;</td>
        <td>
          <table class="editing_table">
            <tr>
              <td>Customers:&nbsp;</td>
              <td>
<%= reporthelp_sorting_selector( f, :customer_sort_field ) %>
              </td>
            </tr>
            <tr>
              <td>Projects:&nbsp;</td>
              <td>
<%= reporthelp_sorting_selector( f, :project_sort_field ) %>
              </td>
            </tr>
            <tr>
              <td>Tasks:&nbsp;</td>
              <td>
<%= reporthelp_sorting_selector( f, :task_sort_field ) %>
              </td>
            </tr>
            <tr>
              <td>Grouping:&nbsp;</td>
              <td>
<%= reporthelp_grouping_selector( f ) %>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>

    <p>
<% if ( action == :create ) -%>
      <%= f.submit( 'Create report', { :disable_with => 'Creating...' } ) %>
<% else -%>
      <%= f.submit( 'Update report', { :disable_with => 'Updating...' } ) %>
<% end -%>
      or <%= link_to 'cancel', home_path %>.
    </p>
    <% end %>
<% end -%>